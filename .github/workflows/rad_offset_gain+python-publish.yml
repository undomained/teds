# This workflow will upload a Python Package to PyPI when a release is created

name: rad_offset_gain - Upload Python Package

on:
  workflow_dispatch:
  push:
      branches: [ "tomd/refactoring" ]
  pull_request:
    branches: [ "tomd/refactoring" ]
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Build release distributions
        run: |
          cd examples/exp3_rad_offset_gain
          make build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: examples/exp3_rad_offset_gain/dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      # url: https://pypi.org/p/undomained
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/undomained/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: examples/exp3_rad_offset_gain/dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: examples/exp3_rad_offset_gain/dist/
